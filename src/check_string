#! /usr/bin/perl -w
#
# Probe searches for patterns in input string
# Copyright (c) 2012 Emir Imamagic
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

#
# Changes and Modifications
# =========================
# 10-Jun-2013 - Created;

use strict;
use Monitoring::Plugin;

# Standard variables used in Monitoring::Plugin constructor
use constant PROGNAME => 'check_string';
use constant VERSION => '1.0';
use constant DESCRIPTION => 'Probe searches for patterns in input string.';
use constant EXTRA_DESC => '';
use constant LICENSE => 'This nagios plugin is free software, and comes with ABSOLUTELY NO WARRANTY.
Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at
   http://www.apache.org/licenses/LICENSE-2.0
Copyright 2012 Emir Imamagic';
use constant SHORTNAME => 'check_string';
use constant USAGE => "usage: check_string --input <string> --search <string> \n";

# Create Monitoring::Plugin instance
my $plugin = Monitoring::Plugin->new (usage => USAGE,
                                  shortname => SHORTNAME,
                                  version => VERSION,
                                  blurb => DESCRIPTION,
                                  extra => EXTRA_DESC,
                                  license => LICENSE,
                                  plugin  => PROGNAME);

# Define additional arguments
$plugin->add_arg(
    spec => 'input|i=s',
    help => "i|input\n   Input string.\n",
    required => 1
);
$plugin->add_arg(
    spec => 'search|s=s',
    help => "s|search\n   Search for string.\n",
    required => 1
);

$plugin->getopts;

# Signal handler - TERM
local $SIG{ALRM} = sub {
    local $SIG{TERM} = 'IGNORE';
    kill TERM => -$$;
    $plugin->nagios_die("Timeout occured.");
};

local $SIG{TERM} = sub {
    local $SIG{TERM} = 'IGNORE';
    kill TERM => -$$;
    $plugin->nagios_die("Plugin received TERM signal.");
};

# Input params validation

my $inputString = $plugin->opts->input;
my $searchString = $plugin->opts->search;

alarm($plugin->opts->timeout);

my $state;
my $answer;

if ( $inputString =~ /$searchString/ ) {
    $state = OK;
    $answer = "Service endpoint $searchString is defined";
} else {
    $state = CRITICAL;
    $answer = "Service endpoint $searchString is not defined, while MPI BDII attributes exist";
}

alarm(0);

$plugin->nagios_exit($state, $answer);

